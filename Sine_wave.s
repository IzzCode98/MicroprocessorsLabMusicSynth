#include <xc.inc>
    

extrn	Reset_wave
global	Sine_setup, Sine_wave

psect data
; ******* My data **
Sine_datapoints: ;128 data points to make 1 cycle of the sine wave
	db  0x00, 0x00, 0x00, 0x01, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x08, 0x09, 0x0B, 0x0D, 0x0F, 0x11, 0x13, 0x15, 0x17, 0x1A, 0x1C, 0x1F, 0x22, 0x25, 0x28, 0x2A, 0x2D, 0x30, 0x34, 0x37, 0x3A, 0x3D, 0x40, 0x43, 0x46, 0x49, 0x4C, 0x50, 0x53, 0x56, 0x58, 0x5B, 0x5E, 0x61, 0x64, 0x66, 0x69, 0x6B, 0x6D, 0x6F, 0x71, 0x73, 0x75, 0x77, 0x78, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7E, 0x7D, 0x7C, 0x7B, 0x7A, 0x78, 0x77, 0x75, 0x73, 0x71, 0x6F, 0x6D, 0x6B, 0x69, 0x66, 0x64, 0x61, 0x5E, 0x5B, 0x58, 0x56, 0x53, 0x50, 0x4C, 0x49, 0x46, 0x43, 0x40, 0x3D, 0x3A, 0x37, 0x34, 0x30, 0x2D, 0x2A, 0x28, 0x25, 0x22, 0x1F, 0x1C, 0x1A, 0x17, 0x15, 0x13, 0x11, 0x0F, 0x0D, 0x0B, 0x09, 0x08, 0x06, 0x05, 0x04, 0x03, 0x02, 0x01, 0x01, 0x00, 0x00
	align	2		; ensure alignment of subsequent instructions 
	; ******* Table reading programme *********************
psect	udata_acs
sine_counter:	ds 1
    
psect	udata_bank4 ; reserve data anywhere in RAM (here at 0x400)
SineArray:    ds  0x80; reserve 128 bytes for sine data
    
psect	sine_code, class=CODE

	; ******* Programme FLASH read Setup Code ****  
Sine_setup:	
	bcf	CFGS	; point to Flash program memory  
	bsf	EEPGD 	; access Flash program memory
	movlw	0x80
	movwf	sine_counter, A
	goto	load_data
	
load_data:	
	lfsr	0, SineArray	; Load FSR0 with address in RAM	
	movlw	low highword(Sine_datapoints)	; address of data in PM
	movwf	TBLPTRU, A	; load upper bits to TBLPTRU
	movlw	high(Sine_datapoints)	; address of data in PM
	movwf	TBLPTRH, A	; load high byte to TBLPTRH
	movlw	low(Sine_datapoints)	; address of data in PM
	movwf	TBLPTRL, A	; load low byte to TBLPTRL
Sine_loop:
        tblrd*+			; move one byte from PM to TABLAT, increment TBLPRT
	movff	TABLAT, POSTINC0	; move read data from TABLAT to (FSR0), increment FSR0	
	decfsz	sine_counter, A	; count down to zero from 128 then reset counter and return
	bra Sine_loop
	movlw	0x80
	movwf	sine_counter, A ; reset counter
	lfsr	0, SineArray ; start at first piece of data
	return		
Sine_wave:
	movff	POSTINC0, LATJ	;move each piece of data to LATJ one by one
	decfsz	sine_counter, A	; count down to zero from 128 then reset
	return	
	movlw	0x80
	movwf	sine_counter, A
	lfsr	0, SineArray
	return
